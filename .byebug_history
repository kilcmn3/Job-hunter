c
user.email
user
c
user.companies
UserCompany.create(user_id: user.id, company_id: company.id)
UserCompany.create(user_iid: user.id, company_id: company.id)
user.userCompanies
c
user.userCompanies
c
user.userCompanies
user.uuserCompanies
c
user.userCompanies
c
user.companies
c
user.companies.delete(company)
user.companies
user
company
c
@@company.users.find(applicant[0][:id])
@@company.users
@@company.users.find_by(applicant[0][:id])
c
@@company.find_by(user
@@company
c
target
@@company.users.delete(user_id: target.id)
@@company.users.delete(target)
@@company.users
@@company.users.delete(target.id)
@@company.users.delete(target)
@@company.users
@@company.users.delete(target)
@@company.users
UserCompany.all
c
target
c
applicant[0].id
applicant[0]
applicant[0[
applicant.id
applicant
UserCompany.find_by(user_id: applicant.id)
c
UserCompany.find_by(user_id: 1)
applicant
c
@@company.users.lengt
@@company.users.length
@@company.users
@@company[0]
@@company
c
new_email
Company.find_by(email: company_profile.email).email
Company.find_by(email: company_profile.email)
Company.all
c
company_profile.name
company_profile
c
applicant[0].first_name
applicant[0]
applicant[:first_name]
applicant
applicant.email
c
applicant
c
applicant
c
split_input[-1]
split_input[2]
split_input
split_inpuut
c
split_input
split_inoput
c
applicant
applicatn
c
list.each{|x| puts x.name}
list.each{|x| puts x}
list 
list
list.map {|x| puts x.name}
list.map {|x| puts x}
c
company_profile.users
company_profile.users == nil
company_profile.users == nill
company_profile.users == nil
c
applicatns
c
applicatns
c
company_profile.users.length
company_profile.users
company_profile
self
c
user.companies
user.userCompanies
user
c
user.userCompanies
User.find(user.id)
user
target
c
user.userCompanies.all
user.userCompanies
user
c
vc
c
user
c
user
c
user
c
UserCompany.all
UserCompany
company.id
company
c
UserCompany.create(user_id: 1,  company_id:1 )
UserCompany.all
user_company.create(user_id:1, comapny_id:1)
user_companies.create(user_id:1, comapny_id:1)
UserCompanies.create(user_id: 1, company_id: 1)
UserCompany.create(user_id: 1, company_id: 1)
User.first.id
User.all
Company.all.length
Company.length
Company.all
c
company10
company10 = Company.create(name: "1", email: "1", program_language: "1")
company1
c
company1
company1 = Company.first
company1
c
companyA
Company.first
Company.all
userA
companyA
c
User_Company.all
User_Company.find_by(company_id: company.id)
User_Company.find_if_exit(company.id)
c
display.length
display
c
companies
compaines
c
display.map{|x| puts x.name}
display.map{|x| puts x}
displa.map{|x| puts x}
display.length
display
c
result.length
result
result = Company.all.select{|display| display.program_language == input.downcase}
Company.all.select{|display| display.program_language == input.downcase}
input
